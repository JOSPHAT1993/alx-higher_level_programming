=====================
using matrix_divided
=====================

This function divides all elements of a matrix.
Parameter matrix is a matrix (list of lists) of integers/floats
Parameter div is a divisor

Import `matrix_divided` from the file `2-matrix_divided.py`:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Numbers
========

Positive divisor:
     >>> matrix_divided([[2, 6], [5, 10]], 6)
     [[0.33, 1.0], [0.83, 1.67]]

Tuple Matrix:
     >>> matrix_divided(([5, 2], [4, 8]), 3)
     Traceback (most recent call last):
       ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

Tuple in Matrix list:
     >>> matrix_divided([[6, 3], (4, 2)], 8)
     Traceback (most recent call last):
       ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix size 3:
     >>> matrix_divided([[5, 3], [2, 5, 67], [6, 9]], 4)
     Traceback (most recent call last):
       ...
     TypeError: Each row of the matrix must have the same size

Divisor by zero:
     >>> matrix_divided([[5, 2], [4, 7], [4, 9]], 0)
     Traceback (most recent call last):
       ...
     ZeroDivisionError: division by zero


Non-Numbers
============

Divisor non-number:
     >>> matrix_divided([[3, 4], [5, 2]], "2")
     Traceback (most recent call last):
       ...
     TypeError: div must be a number

Matrix non-number:
     >>> matrix_divided([[3, 6], ["5", 8]], 3)
     Traceback (most recent call last):
       ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats
